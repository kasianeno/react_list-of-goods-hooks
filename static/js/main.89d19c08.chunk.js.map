{"version":3,"sources":["App.tsx","index.tsx"],"names":["SortType","goodsFromServer","App","useState","clear","sortField","setSortField","reverseThis","setReverseThis","visibleGoods","goods","preparedGoods","sort","good1","good2","alphabet","localeCompare","length","reverse","getPrepearedGoods","className","type","onClick","cn","map","good","ReactDOM","render","document","getElementById"],"mappings":"6KAkBKA,E,0EAbQC,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,W,SAGGD,K,gBAAAA,E,oBAAAA,E,UAAAA,M,KAmCE,IAAME,EAAgB,WAC3B,MAAkCC,mBAASH,EAASI,OAApD,mBAAOC,EAAP,KAAkBC,EAAlB,KACA,EAAsCH,oBAAS,GAA/C,mBAAOI,EAAP,KAAoBC,EAApB,KACMC,EAhCR,SACEC,EACAL,EACAE,GAEA,IAAMI,EAAa,YAAOD,GAqB1B,OAnBIL,GACFM,EAAcC,MAAK,SAACC,EAAOC,GACzB,OAAQT,GACN,KAAKL,EAASe,SACZ,OAAOF,EAAMG,cAAcF,GAE7B,KAAKd,EAASiB,OACZ,OAAOJ,EAAMI,OAASH,EAAMG,OAE9B,QACE,OAAO,MAKXV,GACFI,EAAcO,UAGTP,EAMcQ,CACnBlB,EAAiBI,EAAWE,GAQ9B,OACE,sBAAKa,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEC,KAAK,SACLC,QAAS,kBAAMhB,EAAaN,EAASe,WACrCK,UAAWG,IAAG,iBAAkB,CAC9B,WAAYlB,IAAcL,EAASe,WAJvC,iCAWA,wBACEM,KAAK,SACLC,QAAS,kBAAMhB,EAAaN,EAASiB,SACrCG,UAAWG,IAAG,oBAAqB,CACjC,WAAYlB,IAAcL,EAASiB,SAJvC,4BAUA,wBACEI,KAAK,SACLC,QAAS,kBAAMd,GAAgBD,IAC/Ba,UAAWG,IAAG,oBAAqB,CACjC,YAAahB,IAJjB,sBAUEF,GAAaE,IACb,wBACEc,KAAK,SACLC,QA1CI,WACZhB,EAAaN,EAASI,OACtBI,GAAe,IAyCPY,UAAU,4BAHZ,sBAWJ,6BACGX,EAAae,KAAI,SAAAC,GAAI,OACpB,oBACE,UAAQ,OADV,SAIGA,GAFIA,YChHjBC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.89d19c08.chunk.js","sourcesContent":["import 'bulma/css/bulma.css';\nimport './App.scss';\nimport React, { useState } from 'react';\nimport cn from 'classnames';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nenum SortType {\n  length = 'length',\n  alphabet = 'alphabet',\n  clear = '',\n}\n\nfunction getPrepearedGoods(\n  goods: string[],\n  sortField: string,\n  reverseThis: boolean,\n) {\n  const preparedGoods = [...goods];\n\n  if (sortField) {\n    preparedGoods.sort((good1, good2) => {\n      switch (sortField) {\n        case SortType.alphabet:\n          return good1.localeCompare(good2);\n\n        case SortType.length:\n          return good1.length - good2.length;\n\n        default:\n          return 0;\n      }\n    });\n  }\n\n  if (reverseThis) {\n    preparedGoods.reverse();\n  }\n\n  return preparedGoods;\n}\n\nexport const App: React.FC = () => {\n  const [sortField, setSortField] = useState(SortType.clear);\n  const [reverseThis, setReverseThis] = useState(false);\n  const visibleGoods = getPrepearedGoods(\n    goodsFromServer, sortField, reverseThis,\n  );\n\n  const reset = () => {\n    setSortField(SortType.clear);\n    setReverseThis(false);\n  };\n\n  return (\n    <div className=\"section content\">\n      <div className=\"buttons\">\n        <button\n          type=\"button\"\n          onClick={() => setSortField(SortType.alphabet)}\n          className={cn('button is-info', {\n            'is-light': sortField !== SortType.alphabet,\n          })}\n\n        >\n          Sort alphabetically\n        </button>\n\n        <button\n          type=\"button\"\n          onClick={() => setSortField(SortType.length)}\n          className={cn('button is-success', {\n            'is-light': sortField !== SortType.length,\n          })}\n        >\n          Sort by length\n        </button>\n\n        <button\n          type=\"button\"\n          onClick={() => setReverseThis(!reverseThis)}\n          className={cn('button is-warning', {\n            'is-light': !reverseThis,\n          })}\n        >\n          Reverse\n        </button>\n\n        {(sortField || reverseThis) && (\n          <button\n            type=\"button\"\n            onClick={reset}\n            className=\"button is-danger is-light\"\n          >\n            Reset\n          </button>\n        )}\n\n      </div>\n\n      <ul>\n        {visibleGoods.map(good => (\n          <li\n            data-cy=\"Good\"\n            key={good}\n          >\n            {good}\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}